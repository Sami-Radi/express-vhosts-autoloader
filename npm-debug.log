0 info it worked if it ends with ok
1 verbose cli [ 'C:\\Program Files\\nodejs\\node.exe',
1 verbose cli   'C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js',
1 verbose cli   'publish' ]
2 info using npm@3.10.10
3 info using node@v6.9.5
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   escapedName: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: 'C:\\Users\\vws-comp-02\\Desktop\\express-vhosts-autoloader',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory C:\Users\vws-comp-02\AppData\Roaming\npm-cache\express-vhosts-autoloader\0.1.0\package.tgz not in flight; packing
9 verbose correctMkdir C:\Users\vws-comp-02\AppData\Roaming\npm-cache correctMkdir not in flight; initializing
10 info lifecycle express-vhosts-autoloader@0.1.0~prepublish: express-vhosts-autoloader@0.1.0
11 silly lifecycle express-vhosts-autoloader@0.1.0~prepublish: no script for prepublish, continuing
12 verbose tar pack [ 'C:\\Users\\vws-comp-02\\AppData\\Roaming\\npm-cache\\express-vhosts-autoloader\\0.1.0\\package.tgz',
12 verbose tar pack   'C:\\Users\\vws-comp-02\\Desktop\\express-vhosts-autoloader' ]
13 verbose tarball C:\Users\vws-comp-02\AppData\Roaming\npm-cache\express-vhosts-autoloader\0.1.0\package.tgz
14 verbose folder C:\Users\vws-comp-02\Desktop\express-vhosts-autoloader
15 verbose addLocalTarball adding from inside cache C:\Users\vws-comp-02\AppData\Roaming\npm-cache\express-vhosts-autoloader\0.1.0\package.tgz
16 verbose correctMkdir C:\Users\vws-comp-02\AppData\Roaming\npm-cache correctMkdir not in flight; initializing
17 silly cache afterAdd express-vhosts-autoloader@0.1.0
18 verbose afterAdd C:\Users\vws-comp-02\AppData\Roaming\npm-cache\express-vhosts-autoloader\0.1.0\package\package.json not in flight; writing
19 verbose correctMkdir C:\Users\vws-comp-02\AppData\Roaming\npm-cache correctMkdir not in flight; initializing
20 verbose afterAdd C:\Users\vws-comp-02\AppData\Roaming\npm-cache\express-vhosts-autoloader\0.1.0\package\package.json written
21 silly publish { name: 'express-vhosts-autoloader',
21 silly publish   version: '0.1.0',
21 silly publish   description: 'Autoloads express middlewares using the hostname as the module foldername.',
21 silly publish   main: 'index.js',
21 silly publish   dependencies: { vhost: '^3.0.2', winston: '^2.3.1' },
21 silly publish   devDependencies: { express: '^4.14.1', mocha: '^3.2.0', supertest: '^3.0.0' },
21 silly publish   scripts: { test: 'mocha test' },
21 silly publish   repository:
21 silly publish    { type: 'git',
21 silly publish      url: 'git+https://github.com/Sami-Radi/express-vhosts-autoloader.git' },
21 silly publish   keywords:
21 silly publish    [ 'vhost',
21 silly publish      'vhosts',
21 silly publish      'virtual',
21 silly publish      'host',
21 silly publish      'hosts',
21 silly publish      'express',
21 silly publish      'autoload' ],
21 silly publish   author: { name: 'Sami Radi', email: 'sami.radi@virtuoworks.com' },
21 silly publish   license: 'MIT',
21 silly publish   bugs: { url: 'https://github.com/Sami-Radi/express-vhosts-autoloader/issues' },
21 silly publish   homepage: 'https://github.com/Sami-Radi/express-vhosts-autoloader#readme',
21 silly publish   gitHead: 'd890710795e4cb22ce4a05e04dc795da35c7f08e',
21 silly publish   readme: '# express vhosts autoloader\r\n\r\n[![NPM Version][npm-image]][npm-url]\r\n[![NPM Downloads][downloads-image]][downloads-url]\r\n[![Build Status][travis-image]][travis-url]\r\n\r\nThis module helps you create an Express JS server with virtual hosts auto and manual management.\r\n\r\n## Install\r\n\r\n```sh\r\n$ npm install express-vhosts-autoloader\r\n```\r\n\r\n## Usage\r\n\r\nThis module autoloads your express app\'s as express middlewares when their folders matches the domain name.\r\n\r\nYour folder names **must** be the same as your domain names in order for this module to work. \r\n\r\nLet\'s assume you have this folder structure :\r\n\r\nMy Server Folder :\r\n* `server.js`\r\n* `node_modules`\r\n  * `express`\r\n  * `express-vhosts-autoloader`\r\n* `www.nodeapp1.com`\r\n  * `app.js `\r\n* `www.nodeapp2.com`\r\n  * `app.js`\r\n* `www.nodeapp3.com`\r\n  * `app.js`\r\n\r\nAnd your domain names (pointing to your server) are :\r\n* `www.nodeapp1.com`\r\n* `www.nodeapp2.com`\r\n* `www.nodeapp3.com`\r\n\r\n```javascript\r\n// Load express.\r\nvar express = require(\'express\');\r\n\r\n// Load express vhosts autoloader.\r\nvar vhostsAutoloader = require(\'express-vhosts-autoloader\');\r\n\r\n// Create express server.\r\nvar expressServer = express();\r\n\r\n// Trigger vhostsAutoloader with expressServer as parameter.\r\nvhostsAutoloader(expressServer);\r\n\r\n// Start your express web server\r\nvar port = process.env[\'PORT\'] || 80;\r\nvar server = expressServer.listen(port, function() {\r\n  console.log( \'Server listening on port %d \', port );\r\n});\r\n```\r\n\r\nIt works !\r\n\r\nThe express vhosts autoloader will load each app.js module in each folder as an express middleware triggered only when the required host (i.e domain name) is provided.\r\n\r\nEach `app.js` middleware should end with something like `module.exports.app = app` or `exports.app = app`\r\n\r\n## API\r\n\r\n### `Promise` <= vhostsAutoloader(expressServer, options)\r\n\r\nThis function tries to load any `app.js` file in any folder in the server root folder as an express middleware trigger only when the required domain name is provider in the request.\r\n\r\n* `expressServer` (object, **required**) express server instance.\r\n\r\n* `options` : (object, optional).\r\n  *  `options.debug` (boolean, optional) : defaults to `false`. If `true` makes the module more verbose in the console.\r\n  *  `options.folder` (string, optional) : defaults to server root directory. If set `vhostsAutoloader` tries to load any `app.js` from the folder provided.\r\n\r\n##### Example :\r\n\r\n```javascript\r\n// Tries to load any file in folders located inside /home/user\r\nvar expressServer = vhostsAutoloader(expressServer, {\r\n  folder: \'/home/user\'\r\n});\r\n```\r\n### `Promise` <= vhostsAutoloader.loadVhost(options)\r\n\r\nThis utility method loads an express middleware triggered only when the required host (i.e domain name) is provided. \r\n\r\n* `options` : (object, **required**).\r\n  *  `options.debug` (boolean) : defaults to `false`. If `true` makes the module more verbose in the console.\r\n  *  `options.domainName` (string, **required**) : the domain name / folder name\r\n  *  `options.mainFile` (string, optional) : defaults to `\'app\'`. If set the method will try to load the file named after the provided value. \r\n  *  `options.exportsProperty` (string, optional) : defaults to `\'app\'`. If set the method will try to use the exports property named after the provided value\r\n  *  `options.expressServer` (object, optional | required) : Optional if used after calling `vhostsAutoloader`. **Required** if `vhostsAutoloader.loadVhost` is used alone.\r\n  *  `options.folder` (object, optional) : defaults to server root directory. If set `vhostsAutoloader.loadVhost` tries to load the module from the `folder\\domainName` folder.\r\n \r\n##### Examples\r\n\r\nUsed **after calling** `vhostsAutoloader`\r\n\r\n```javascript\r\nvhostsAutoloader.loadVhost({\r\n  domainName:\'www.foo.com\'\r\n});\r\n```\r\nFor `www.foo.com` folder `.\\www.foo.com` will be served and `app.js` module required, needs `module.exports.app` to be set in `app.js`.\r\n\r\n```javascript\r\nvhostsAutoloader.loadVhost({\r\n  domainName:\'www.foobar.com\',\r\n  mainFile:\'index\'\r\n});\r\n```\r\nFor `www.foobar.com` folder `.\\www.foobar.com` will be served and `index.js` module required, needs `module.exports.index` to be set in `index.js`.\r\n\r\n```javascript\r\nvhostsAutoloader.loadVhost({\r\n  domainName:\'www.foobarfoo.com\',\r\n  mainFile:\'index\',\r\n  exportsProperty:\'bar\'\r\n});\r\n```\r\nFor `www.foobarfoo.com` folder `.\\www.foobarfoo.com` will be served, `index.js` module required, needs `module.exports.bar` to be set in `index.js`.\r\n\r\nUsed **without calling** `vhostsAutoloader`\r\n\r\n```javascript\r\n// Load express.\r\nvar express = require(\'express\');\r\n// Load express vhosts autoloader.\r\nvar vhostsAutoloader = require(\'express-vhosts-autoloader\');\r\n// Create express server.\r\nvar expressServer = express();\r\n\r\nvhostsAutoloader.loadVhost({\r\n  domainName:\'www.foobarfoo.com\',\r\n  mainFile:\'foo\',\r\n  exportsProperty:\'bar\',\r\n  expressServer:expressServer\r\n});\r\n```\r\nFor `www.foobarfoo.com` folder `.\\www.foobarfoo.com` will be served, `foo.js` module required, needs `module.exports.bar` to be set in `foo.js`.\r\n\r\n## License\r\n\r\n[MIT](LICENSE)\r\n\r\n[npm-image]: https://img.shields.io/npm/v/express-vhosts-autoloader.svg\r\n[npm-url]: https://npmjs.org/package/express-vhosts-autoloader\r\n[downloads-image]: https://img.shields.io/npm/dm/express-vhosts-autoloader.svg\r\n[downloads-url]: https://npmjs.org/package/express-vhosts-autoloader\r\n[travis-image]: https://api.travis-ci.org/Sami-Radi/express-vhosts-autoloader.svg?branch=master\r\n[travis-url]: https://travis-ci.org/Sami-Radi/express-vhosts-autoloader\r\n',
21 silly publish   readmeFilename: 'README.md',
21 silly publish   _id: 'express-vhosts-autoloader@0.1.0',
21 silly publish   _shasum: 'c4843b66a435eee50e3b4ac35695f9c97cb70b68',
21 silly publish   _from: '.' }
22 verbose getPublishConfig undefined
23 silly mapToRegistry name express-vhosts-autoloader
24 silly mapToRegistry using default registry
25 silly mapToRegistry registry https://registry.npmjs.org/
26 silly mapToRegistry data Result {
26 silly mapToRegistry   raw: 'express-vhosts-autoloader',
26 silly mapToRegistry   scope: null,
26 silly mapToRegistry   escapedName: 'express-vhosts-autoloader',
26 silly mapToRegistry   name: 'express-vhosts-autoloader',
26 silly mapToRegistry   rawSpec: '',
26 silly mapToRegistry   spec: 'latest',
26 silly mapToRegistry   type: 'tag' }
27 silly mapToRegistry uri https://registry.npmjs.org/express-vhosts-autoloader
28 verbose publish registryBase https://registry.npmjs.org/
29 silly publish uploading C:\Users\vws-comp-02\AppData\Roaming\npm-cache\express-vhosts-autoloader\0.1.0\package.tgz
30 verbose request uri https://registry.npmjs.org/express-vhosts-autoloader
31 verbose request sending authorization for write operation
32 info attempt registry request try #1 at 17:50:38
33 verbose request using bearer token for auth
34 verbose request id 75f86dc396211d7a
35 http request PUT https://registry.npmjs.org/express-vhosts-autoloader
36 http 403 https://registry.npmjs.org/express-vhosts-autoloader
37 verbose headers { 'content-type': 'application/json',
37 verbose headers   'cache-control': 'max-age=300',
37 verbose headers   'content-length': '95',
37 verbose headers   'accept-ranges': 'bytes',
37 verbose headers   date: 'Fri, 24 Feb 2017 16:50:39 GMT',
37 verbose headers   via: '1.1 varnish',
37 verbose headers   connection: 'keep-alive',
37 verbose headers   'x-served-by': 'cache-lcy1136-LCY',
37 verbose headers   'x-cache': 'MISS',
37 verbose headers   'x-cache-hits': '0',
37 verbose headers   'x-timer': 'S1487955038.779108,VS0,VE1072',
37 verbose headers   vary: 'Accept-Encoding' }
38 verbose request invalidating C:\Users\vws-comp-02\AppData\Roaming\npm-cache\registry.npmjs.org\express-vhosts-autoloader on PUT
39 error publish Failed PUT 403
40 verbose stack Error: "You cannot publish over the previously published version 0.1.0." : express-vhosts-autoloader
40 verbose stack     at makeError (C:\Program Files\nodejs\node_modules\npm\node_modules\npm-registry-client\lib\request.js:302:12)
40 verbose stack     at CachingRegistryClient.<anonymous> (C:\Program Files\nodejs\node_modules\npm\node_modules\npm-registry-client\lib\request.js:290:14)
40 verbose stack     at Request._callback (C:\Program Files\nodejs\node_modules\npm\node_modules\npm-registry-client\lib\request.js:210:14)
40 verbose stack     at Request.self.callback (C:\Program Files\nodejs\node_modules\npm\node_modules\request\request.js:187:22)
40 verbose stack     at emitTwo (events.js:106:13)
40 verbose stack     at Request.emit (events.js:191:7)
40 verbose stack     at Request.<anonymous> (C:\Program Files\nodejs\node_modules\npm\node_modules\request\request.js:1048:10)
40 verbose stack     at emitOne (events.js:96:13)
40 verbose stack     at Request.emit (events.js:188:7)
40 verbose stack     at IncomingMessage.<anonymous> (C:\Program Files\nodejs\node_modules\npm\node_modules\request\request.js:969:12)
41 verbose statusCode 403
42 verbose pkgid express-vhosts-autoloader
43 verbose cwd C:\Users\vws-comp-02\Desktop\express-vhosts-autoloader
44 error Windows_NT 10.0.14393
45 error argv "C:\\Program Files\\nodejs\\node.exe" "C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js" "publish"
46 error node v6.9.5
47 error npm  v3.10.10
48 error code E403
49 error "You cannot publish over the previously published version 0.1.0." : express-vhosts-autoloader
50 error If you need help, you may report this error at:
50 error     <https://github.com/npm/npm/issues>
51 verbose exit [ 1, true ]
